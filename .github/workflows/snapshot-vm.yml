name: Create VM Snapshot

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'Name of the VM to snapshot'
        required: false
        default: 'traffic-vm'
      snapshot_name:
        description: 'Name for the snapshot'
        required: false
        default: 'traffic-vm-snapshot'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ZONE: us-central1-a

jobs:
  create-snapshot:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Stop VM and Create Snapshot
      run: |
        VM_NAME="${{ github.event.inputs.vm_name || 'traffic-vm' }}"
        SNAPSHOT_NAME="${{ github.event.inputs.snapshot_name || 'traffic-vm-snapshot' }}"
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        FULL_SNAPSHOT_NAME="${SNAPSHOT_NAME}-${TIMESTAMP}"
        
        echo "Creating snapshot of VM: $VM_NAME"
        echo "Snapshot name: $FULL_SNAPSHOT_NAME"
        
        # Check if VM exists
        if ! gcloud compute instances describe $VM_NAME --zone=${{ env.ZONE }} >/dev/null 2>&1; then
          echo "Error: VM $VM_NAME does not exist"
          exit 1
        fi
        
        # Stop the VM gracefully first
        echo "Stopping VM to ensure consistent snapshot..."
        gcloud compute instances stop $VM_NAME --zone=${{ env.ZONE }} --quiet
        
        # Wait for VM to stop
        echo "Waiting for VM to stop completely..."
        while true; do
          STATUS=$(gcloud compute instances describe $VM_NAME --zone=${{ env.ZONE }} --format='get(status)')
          if [ "$STATUS" = "TERMINATED" ]; then
            echo "VM stopped successfully"
            break
          fi
          echo "VM status: $STATUS, waiting..."
          sleep 5
        done
        
        # Create snapshot of the boot disk
        echo "Creating snapshot of boot disk..."
        BOOT_DISK=$(gcloud compute instances describe $VM_NAME --zone=${{ env.ZONE }} --format='get(disks[0].source)')
        DISK_NAME=$(basename $BOOT_DISK)
        
        gcloud compute disks snapshot $DISK_NAME \
          --zone=${{ env.ZONE }} \
          --snapshot-names=$FULL_SNAPSHOT_NAME \
          --description="Snapshot of $VM_NAME created on $(date)"
        
        echo "Snapshot created successfully: $FULL_SNAPSHOT_NAME"
        echo "VM remains stopped after snapshot creation"
        echo "Snapshot operation completed"
        echo "Snapshot name: $FULL_SNAPSHOT_NAME"

    - name: List Recent Snapshots
      run: |
        echo "Recent snapshots:"
        gcloud compute snapshots list --filter="name~'traffic-vm-snapshot'" --sort-by="~creationTimestamp" --limit=5